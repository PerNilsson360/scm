(load "/home/per/git/scm/tst/2d-geometry.scm")
(load "/home/per/prg/c++/scheme/keysymdef.scm")
(load "/home/per/git/scm/rgb-colors.scm")

(define window-width 640)
(define window-height 400)
(define pi 3.14159265359)
(define a90 (/ pi 2))
(define a180 pi)
(define a270 (* (/ 3 2) pi))
(define a360 (* 2 pi))

(define (clear-screen)
  (gr-set-foreground white)
  (gr-move-to! 0 0)
  (gr-fill-rect window-width window-height))

(define (make-ship start-x start-y start-velocity start-angle)
  (let ((x start-x)
		(y start-y)
		(velocity start-velocity)
        (angle start-angle))
    (define (draw)
	  ;(print-line (list x y))
	  (gr-set-foreground blue)
	  (gr-move-to! x y) 
	  (gr-fill-polygon #((10 . 10)(10 . 20)(15 . 15))))
    (define (move) (print-line 'move))
	(lambda (message)
	  (match message
		(animate
		 (move)
		 (draw))
		(? (error "world: unkown message: " message))))))

(define (run)
  (let  ((running #t)
		 (ship (make-ship 10 10 0 0)))
	(define (handle-events n-events)
      (if (> n-events 0)
		  (let ((event (x-next-event)))
			(match event
			  ((key-press ?win ?x ?y ?state ?key ?str) 
		       (if (= key xk-Q)
				   (begin (print-line event) (set! running #f))
				   (begin (print-line event) (handle-events (dec n-events)))))
			  (? (begin (handle-events (dec n-events))))))))
	(let loop ()
	  (if running
		  (let ((n-events (x-events-queued)))
			(if (= n-events 0)
				(begin (clear-screen)
	  				   (ship 'animate)
					   (gr-swap-buffers)
					   (nano-sleep 0 2000)
					   (loop))
				(begin (handle-events n-events) (loop))))))))

(gr-open `((width ,window-width)
		   (height ,window-height)
		   (window-name "shoot")))
;(load "/home/per/git/scm/tst/shoot.scm")
;(run)
;(gr-close)

